%{
#include<iostream>
#include<cstdlib>
#include<string>
#include<cstdlib>
#include<map>


#define YYDEBUG 1

extern int yylex();

void yyerror(std::string s){
	std::cerr << "Sintaksna greska: " << s << std::endl;
	exit(EXIT_FAILURE);
}

std::map<std::string, int> prom;

%}

%union {
	int integer;
	std::string* s;
}

%token<integer> broj_tok
%token <s> prom_tok
%token print_tok

%type <integer> E

%left '+' '-'
%left '*' '/'
%left UNMIN

%%

Program
	: niz_naredbi
	;

niz_naredbi
	: niz_naredbi naredba '\n'
	|
	;

naredba
	: print_tok E {
		std::cout << $2 << std::endl;
	}
	| prom_tok '=' E {
		prom[*$1] = $3;
		delete $1;
	}
	;

E
	: E '+' E {
		$$ = $1 + $3;
	}
	| E '-' E {
		$$ = $1 - $3;
	}
	| E '*' E {
		$$ = $1 * $3;
	}
	| E '/' E {
		if ($3 == 0) {
			std::cerr << "Deljenje nulom nije dozvoljeno.." << std::endl;
			exit(EXIT_FAILURE);
		}else{
		$$ = $1 / $3;
		}
	}
	| '-' E %prec UNMIN {
		$$ = -$2;
	}
	| broj_tok {
		$$ = $1;
	}
	| '(' E ')' {
		$$ = $2;
	}
	| prom_tok {
		auto i = prom.find(*$1);
		if (i != prom.end()){
			$$ = i->second;
		}else{
			std::cout<< "Promenljiva \"" << *$1 << "\" nije definisana" << std::endl;
			$$ = 0;
		}
		delete $1;
	}
	;

%%

int main(){

	yyparse();
	exit(EXIT_SUCCESS);
}
